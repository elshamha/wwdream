# Generated by Django 5.2.4 on 2025-09-03 04:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('writer', '0019_userprofile_bio_userprofile_favorite_quotes_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassicBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('author', models.CharField(max_length=200)),
                ('original_title', models.CharField(blank=True, help_text='Original title if translated', max_length=500)),
                ('subtitle', models.CharField(blank=True, max_length=500)),
                ('genre', models.CharField(choices=[('fiction', 'Fiction'), ('non-fiction', 'Non-Fiction'), ('poetry', 'Poetry'), ('drama', 'Drama'), ('philosophy', 'Philosophy'), ('history', 'History'), ('science', 'Science'), ('biography', 'Biography'), ('romance', 'Romance'), ('mystery', 'Mystery'), ('adventure', 'Adventure'), ('fantasy', 'Fantasy'), ('horror', 'Horror'), ('children', "Children's Literature")], max_length=50)),
                ('language', models.CharField(choices=[('english', 'English'), ('french', 'French'), ('german', 'German'), ('spanish', 'Spanish'), ('italian', 'Italian'), ('portuguese', 'Portuguese'), ('russian', 'Russian'), ('latin', 'Latin'), ('greek', 'Greek'), ('chinese', 'Chinese'), ('japanese', 'Japanese'), ('arabic', 'Arabic')], default='english', max_length=50)),
                ('original_language', models.CharField(blank=True, choices=[('english', 'English'), ('french', 'French'), ('german', 'German'), ('spanish', 'Spanish'), ('italian', 'Italian'), ('portuguese', 'Portuguese'), ('russian', 'Russian'), ('latin', 'Latin'), ('greek', 'Greek'), ('chinese', 'Chinese'), ('japanese', 'Japanese'), ('arabic', 'Arabic')], max_length=50)),
                ('era', models.CharField(choices=[('ancient', 'Ancient (Before 500 CE)'), ('medieval', 'Medieval (500-1500)'), ('renaissance', 'Renaissance (1500-1700)'), ('enlightenment', 'Enlightenment (1700-1800)'), ('romantic', 'Romantic (1800-1850)'), ('victorian', 'Victorian (1850-1900)'), ('modern', 'Modern (1900-1950)'), ('contemporary', 'Contemporary (1950+)')], max_length=50)),
                ('publication_year', models.IntegerField(help_text='Year of original publication')),
                ('copyright_status', models.CharField(default='Public Domain', max_length=100)),
                ('gutenberg_id', models.CharField(blank=True, help_text='Project Gutenberg ID if available', max_length=20)),
                ('description', models.TextField(help_text='Book description or synopsis')),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('word_count', models.IntegerField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, max_length=20)),
                ('subjects', models.JSONField(default=list, help_text='List of subject categories')),
                ('keywords', models.JSONField(default=list, help_text='Keywords for search')),
                ('cover_image_url', models.URLField(blank=True, help_text='URL to book cover image')),
                ('epub_url', models.URLField(blank=True, help_text='URL to EPUB file')),
                ('pdf_url', models.URLField(blank=True, help_text='URL to PDF file')),
                ('txt_url', models.URLField(blank=True, help_text='URL to plain text file')),
                ('html_url', models.URLField(blank=True, help_text='URL to HTML version')),
                ('mobi_url', models.URLField(blank=True, help_text='URL to MOBI file')),
                ('download_count', models.IntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('rating_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Featured on homepage')),
                ('is_active', models.BooleanField(default=True, help_text='Available for borrowing')),
            ],
            options={
                'ordering': ['-is_featured', 'title'],
                'indexes': [models.Index(fields=['genre'], name='writer_clas_genre_7225a0_idx'), models.Index(fields=['language'], name='writer_clas_languag_3eeb9f_idx'), models.Index(fields=['era'], name='writer_clas_era_7e751a_idx'), models.Index(fields=['author'], name='writer_clas_author_fa7f4c_idx'), models.Index(fields=['publication_year'], name='writer_clas_publica_d30d1b_idx'), models.Index(fields=['-download_count'], name='writer_clas_downloa_620d1b_idx'), models.Index(fields=['-rating'], name='writer_clas_rating_5beb3c_idx')],
            },
        ),
        migrations.CreateModel(
            name='BorrowedBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrowed_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(auto_now=True)),
                ('reading_progress', models.IntegerField(default=0, help_text='Reading progress as percentage')),
                ('current_page', models.IntegerField(default=1)),
                ('bookmarks', models.JSONField(default=list, help_text='List of bookmarked pages/positions')),
                ('notes', models.TextField(blank=True, help_text="User's notes on this book")),
                ('favorite', models.BooleanField(default=False)),
                ('reading_status', models.CharField(choices=[('not_started', 'Not Started'), ('reading', 'Currently Reading'), ('finished', 'Finished'), ('paused', 'Paused'), ('abandoned', 'Abandoned')], default='not_started', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrowed_books', to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrowers', to='writer.classicbook')),
            ],
            options={
                'ordering': ['-last_read_at'],
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.CreateModel(
            name='BookReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Rating from 1 to 5 stars')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('helpful_votes', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='writer.classicbook')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'book')},
            },
        ),
    ]
