# Generated by Django 5.2.5 on 2025-09-02 18:16

from django.db import migrations
from django.db import connection


def create_missing_tables(apps, schema_editor):
    """Create missing version control tables manually"""
    cursor = connection.cursor()
    
    # Create ChapterVersion table
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS writer_chapterversion (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            version_number INTEGER NOT NULL,
            title VARCHAR(200) NOT NULL,
            content TEXT NOT NULL,
            save_reason VARCHAR(100),
            created_at DATETIME NOT NULL,
            word_count INTEGER DEFAULT 0,
            is_major_version BOOLEAN DEFAULT 0,
            is_published_version BOOLEAN DEFAULT 0,
            chapter_id INTEGER NOT NULL REFERENCES writer_chapter(id) ON DELETE CASCADE,
            saved_by_id INTEGER NOT NULL REFERENCES auth_user(id) ON DELETE CASCADE,
            UNIQUE(chapter_id, version_number)
        );
    """)
    
    # Create VersionControlSettings table
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS writer_versioncontrolsettings (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            auto_save_enabled BOOLEAN DEFAULT 1,
            auto_save_interval INTEGER DEFAULT 10,
            max_versions_to_keep INTEGER DEFAULT 50,
            notify_on_version_save BOOLEAN DEFAULT 1,
            require_save_reason BOOLEAN DEFAULT 0,
            user_id INTEGER NOT NULL UNIQUE REFERENCES auth_user(id) ON DELETE CASCADE
        );
    """)
    
    # Create indexes
    cursor.execute("CREATE INDEX IF NOT EXISTS writer_chapterversion_chapter_id_idx ON writer_chapterversion(chapter_id);")
    cursor.execute("CREATE INDEX IF NOT EXISTS writer_chapterversion_saved_by_id_idx ON writer_chapterversion(saved_by_id);")
    cursor.execute("CREATE INDEX IF NOT EXISTS writer_versioncontrolsettings_user_id_idx ON writer_versioncontrolsettings(user_id);")


class Migration(migrations.Migration):

    dependencies = [
        ('writer', '0016_versioncontrolsettings_chapterversion_and_more'),
    ]

    operations = [
        migrations.RunPython(create_missing_tables),
    ]
