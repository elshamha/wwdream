# Generated by Django 5.2.4 on 2025-08-28 18:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('writer', '0011_project_ai_assistance_level_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreativeNotebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='My Creative Notebook', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('board_data', models.JSONField(default=dict, help_text='Stores the visual board layout and connections')),
                ('notes', models.TextField(blank=True, null=True)),
                ('ai_suggestions', models.JSONField(default=list, help_text='Stores AI-generated suggestions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_shared', models.BooleanField(default=False)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creative_notebooks', to='writer.project')),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_creative_notebooks', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creative_notebooks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CreativeNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, null=True)),
                ('node_type', models.CharField(choices=[('idea', 'Idea'), ('character', 'Character'), ('plot', 'Plot Point'), ('conflict', 'Conflict'), ('theme', 'Theme'), ('setting', 'Setting'), ('note', 'Note'), ('question', 'Question')], default='idea', max_length=20)),
                ('position_x', models.FloatField(default=0)),
                ('position_y', models.FloatField(default=0)),
                ('color', models.CharField(default='#4CAF50', help_text='Hex color code', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='writer.creativenotebook')),
            ],
        ),
        migrations.CreateModel(
            name='NodeConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_type', models.CharField(choices=[('leads_to', 'Leads To'), ('relates_to', 'Relates To'), ('conflicts_with', 'Conflicts With'), ('supports', 'Supports'), ('explains', 'Explains'), ('causes', 'Causes'), ('prevents', 'Prevents')], default='relates_to', max_length=20)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_connections', to='writer.creativenode')),
                ('to_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_connections', to='writer.creativenode')),
            ],
            options={
                'unique_together': {('from_node', 'to_node')},
            },
        ),
    ]
