# Generated by Django 5.2.5 on 2025-08-07 03:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('writer', '0002_aiassistancerequest_project_document_project_chapter'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DevicePreview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('iphone', 'iPhone'), ('ipad', 'iPad'), ('kindle', 'Amazon Kindle'), ('imac', 'iMac'), ('macbook', 'MacBook'), ('android_phone', 'Android Phone'), ('android_tablet', 'Android Tablet'), ('windows_laptop', 'Windows Laptop'), ('paperback', 'Paperback Book'), ('hardcover', 'Hardcover Book')], max_length=50, unique=True)),
                ('screen_width', models.IntegerField()),
                ('screen_height', models.IntegerField()),
                ('font_size_default', models.IntegerField(default=16)),
                ('line_height', models.FloatField(default=1.5)),
                ('margin_left', models.IntegerField(default=20)),
                ('margin_right', models.IntegerField(default=20)),
                ('margin_top', models.IntegerField(default=20)),
                ('margin_bottom', models.IntegerField(default=20)),
            ],
        ),
        migrations.CreateModel(
            name='WritingTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('novel', 'Novel'), ('screenplay', 'Screenplay'), ('stage_play', 'Stage Play'), ('essay', 'Essay'), ('short_story', 'Short Story'), ('poetry', 'Poetry'), ('academic', 'Academic Paper'), ('blog', 'Blog Post'), ('technical', 'Technical Writing'), ('creative_nonfiction', 'Creative Nonfiction')], max_length=50, unique=True)),
                ('description', models.TextField()),
                ('formatting_rules', models.JSONField(default=dict, help_text='JSON formatting rules for this theme')),
                ('default_structure', models.JSONField(default=dict, help_text='Default project structure')),
            ],
        ),
        migrations.AddField(
            model_name='aiassistancerequest',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='writer.project'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='last_edited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='is_collaborative',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Allow public viewing'),
        ),
        migrations.AlterField(
            model_name='aiassistancerequest',
            name='assistance_type',
            field=models.CharField(choices=[('brainstorm', 'Brainstorming'), ('edit', 'Editing Suggestions'), ('continue', 'Continue Writing'), ('rewrite', 'Rewrite Section'), ('grammar', 'Grammar Check'), ('style', 'Style Improvement'), ('character', 'Character Development'), ('dialogue', 'Dialogue Enhancement'), ('plot', 'Plot Development')], max_length=20),
        ),
        migrations.AlterField(
            model_name='project',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('role', models.CharField(blank=True, help_text='e.g., Protagonist, Antagonist, Supporting', max_length=50, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('appearance', models.TextField(blank=True, null=True)),
                ('personality', models.TextField(blank=True, null=True)),
                ('background', models.TextField(blank=True, null=True)),
                ('goals', models.TextField(blank=True, null=True)),
                ('conflicts', models.TextField(blank=True, null=True)),
                ('relationships', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='characters/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='writer.project')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('project', 'name')},
            },
        ),
        migrations.AddField(
            model_name='chapter',
            name='characters_mentioned',
            field=models.ManyToManyField(blank=True, related_name='mentioned_in_chapters', to='writer.character'),
        ),
        migrations.AddField(
            model_name='document',
            name='characters_mentioned',
            field=models.ManyToManyField(blank=True, related_name='mentioned_in_documents', to='writer.character'),
        ),
        migrations.CreateModel(
            name='ImportedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('original_file', models.FileField(upload_to='imports/')),
                ('import_type', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word Document'), ('gdoc', 'Google Document'), ('txt', 'Text File'), ('rtf', 'Rich Text Format'), ('odt', 'OpenDocument Text')], max_length=10)),
                ('extracted_content', models.TextField(blank=True, null=True)),
                ('import_date', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.IntegerField(default=0)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='imported_documents', to='writer.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imported_documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='My Library', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='library', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('editor', 'Editor'), ('contributor', 'Contributor'), ('reviewer', 'Reviewer')], default='contributor', max_length=20)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('can_edit', models.BooleanField(default=True)),
                ('can_delete', models.BooleanField(default=False)),
                ('can_invite_others', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='writer.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('project', 'user')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='collaborators',
            field=models.ManyToManyField(related_name='collaborative_projects', through='writer.ProjectCollaborator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='WritingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('words_written', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='writer.chapter')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='writing_sessions', to='writer.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='theme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='writer.writingtheme'),
        ),
    ]
